import{q as i,a as H,v as _}from"./index-DW9AIAM8.js";const t=e=>({url:t.url(e),method:"get"});t.definition={methods:["get","head"],url:"/login"};t.url=e=>t.definition.url+i(e);t.get=e=>({url:t.url(e),method:"get"});t.head=e=>({url:t.url(e),method:"head"});const c=e=>({action:t.url(e),method:"get"});c.get=e=>({action:t.url(e),method:"get"});c.head=e=>({action:t.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});t.form=c;const n=e=>({url:n.url(e),method:"post"});n.definition={methods:["post"],url:"/logout"};n.url=e=>n.definition.url+i(e);n.post=e=>({url:n.url(e),method:"post"});const F=e=>({action:n.url(e),method:"post"});F.post=e=>({action:n.url(e),method:"post"});n.form=F;const u=(e,r)=>({url:u.url(e,r),method:"get"});u.definition={methods:["get","head"],url:"/telescope/{view?}"};u.url=(e,r)=>{(typeof e=="string"||typeof e=="number")&&(e={view:e}),Array.isArray(e)&&(e={view:e[0]}),e=H(e),_(e,["view"]);const E={view:e?.view};return u.definition.url.replace("{view?}",E.view?.toString()??"").replace(/\/+$/,"")+i(r)};u.get=(e,r)=>({url:u.url(e,r),method:"get"});u.head=(e,r)=>({url:u.url(e,r),method:"head"});const y=(e,r)=>({action:u.url(e,r),method:"get"});y.get=(e,r)=>({action:u.url(e,r),method:"get"});y.head=(e,r)=>({action:u.url(e,{[r?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...r?.query??r?.mergeQuery??{}}}),method:"get"});u.form=y;const o=e=>({url:o.url(e),method:"get"});o.definition={methods:["get","head"],url:"/"};o.url=e=>o.definition.url+i(e);o.get=e=>({url:o.url(e),method:"get"});o.head=e=>({url:o.url(e),method:"head"});const s=e=>({action:o.url(e),method:"get"});s.get=e=>({action:o.url(e),method:"get"});s.head=e=>({action:o.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});o.form=s;const d=e=>({url:d.url(e),method:"get"});d.definition={methods:["get","head"],url:"/dashboard"};d.url=e=>d.definition.url+i(e);d.get=e=>({url:d.url(e),method:"get"});d.head=e=>({url:d.url(e),method:"head"});const f=e=>({action:d.url(e),method:"get"});f.get=e=>({action:d.url(e),method:"get"});f.head=e=>({action:d.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});d.form=f;const l=e=>({url:l.url(e),method:"get"});l.definition={methods:["get","head"],url:"/debug-campus-clean"};l.url=e=>l.definition.url+i(e);l.get=e=>({url:l.url(e),method:"get"});l.head=e=>({url:l.url(e),method:"head"});const Q=e=>({action:l.url(e),method:"get"});Q.get=e=>({action:l.url(e),method:"get"});Q.head=e=>({action:l.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});l.form=Q;const m=e=>({url:m.url(e),method:"get"});m.definition={methods:["get","head"],url:"/ver-logs"};m.url=e=>m.definition.url+i(e);m.get=e=>({url:m.url(e),method:"get"});m.head=e=>({url:m.url(e),method:"head"});const q=e=>({action:m.url(e),method:"get"});q.get=e=>({action:m.url(e),method:"get"});q.head=e=>({action:m.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});m.form=q;const h=e=>({url:h.url(e),method:"get"});h.definition={methods:["get","head"],url:"/calendario"};h.url=e=>h.definition.url+i(e);h.get=e=>({url:h.url(e),method:"get"});h.head=e=>({url:h.url(e),method:"head"});const v=e=>({action:h.url(e),method:"get"});v.get=e=>({action:h.url(e),method:"get"});v.head=e=>({action:h.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});h.form=v;const g=e=>({url:g.url(e),method:"get"});g.definition={methods:["get","head"],url:"/reportes"};g.url=e=>g.definition.url+i(e);g.get=e=>({url:g.url(e),method:"get"});g.head=e=>({url:g.url(e),method:"head"});const A=e=>({action:g.url(e),method:"get"});A.get=e=>({action:g.url(e),method:"get"});A.head=e=>({action:g.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});g.form=A;const a=e=>({url:a.url(e),method:"get"});a.definition={methods:["get","head"],url:"/register"};a.url=e=>a.definition.url+i(e);a.get=e=>({url:a.url(e),method:"get"});a.head=e=>({url:a.url(e),method:"head"});const D=e=>({action:a.url(e),method:"get"});D.get=e=>({action:a.url(e),method:"get"});D.head=e=>({action:a.url({[e?.mergeQuery?"mergeQuery":"query"]:{_method:"HEAD",...e?.query??e?.mergeQuery??{}}}),method:"get"});a.form=D;export{n as a,d,o as h,t as l,a as r};
