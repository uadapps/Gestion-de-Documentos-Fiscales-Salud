#!/bin/bash

# Script de post-deploy para cPanel
# Ejecutar este script en el servidor despu√©s de subir archivos

echo "üöÄ POST-DEPLOY DOCUMENTOS FISCALES"
echo "=================================="

# Definir rutas (ajustar seg√∫n tu cPanel)
APPPATH="/home/tu_usuario_cpanel/documentos_fiscales_app"
PUBLICPATH="/home/tu_usuario_cpanel/public_html"

# Ir al directorio de la aplicaci√≥n
cd $APPPATH

echo "üì¶ Instalando dependencias de Composer..."
/usr/local/bin/ea-php83 composer.phar install --optimize-autoloader --no-dev --no-interaction

echo "üîë Generando clave de aplicaci√≥n..."
/usr/local/bin/ea-php83 artisan key:generate --force

echo "üóÑÔ∏è Ejecutando migraciones..."
echo "‚ö†Ô∏è ATENCI√ìN: Esto ejecutar√° las migraciones en la base de datos"
read -p "¬øContinuar? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    /usr/local/bin/ea-php83 artisan migrate --force
    echo "‚úÖ Migraciones ejecutadas"
else
    echo "‚è≠Ô∏è Migraciones omitidas (ejecutar manualmente despu√©s)"
fi

echo "‚ö° Optimizando Laravel para producci√≥n..."
/usr/local/bin/ea-php83 artisan config:cache
/usr/local/bin/ea-php83 artisan route:cache
/usr/local/bin/ea-php83 artisan view:cache

echo "üîó Configurando enlace simb√≥lico para storage..."
rm -f $PUBLICPATH/storage
ln -s $APPPATH/storage/app/public $PUBLICPATH/storage

echo "üîí Configurando permisos..."
find $APPPATH/storage -type d -exec chmod 755 {} \;
find $APPPATH/storage -type f -exec chmod 644 {} \;
find $APPPATH/bootstrap/cache -type d -exec chmod 755 {} \;
find $APPPATH/bootstrap/cache -type f -exec chmod 644 {} \;

# Configurar permisos espec√≠ficos para directorios cr√≠ticos
chmod -R 755 $APPPATH/storage/app/public
chmod -R 755 $APPPATH/storage/framework/cache
chmod -R 755 $APPPATH/storage/framework/sessions
chmod -R 755 $APPPATH/storage/framework/views
chmod -R 755 $APPPATH/storage/logs

echo "üßπ Limpiando archivos innecesarios..."
rm -f $APPPATH/debug_*.php
rm -f $APPPATH/temp_*.php
rm -f $APPPATH/deploy-cpanel.bat
rm -f $APPPATH/install_telescope.bat
rm -f $APPPATH/php-dev.ini
rm -f $APPPATH/php.ini
rm -rf $APPPATH/scripts

echo "‚ú® Verificaciones finales..."
echo "üîç Verificando archivos cr√≠ticos..."

if [ -f "$APPPATH/.env" ]; then
    echo "‚úÖ .env existe"
else
    echo "‚ùå .env NO EXISTE - ¬°CR√çTICO!"
fi

if [ -f "$PUBLICPATH/index.php" ]; then
    echo "‚úÖ index.php en public_html existe"
else
    echo "‚ùå index.php NO EXISTE en public_html - ¬°CR√çTICO!"
fi

if [ -d "$PUBLICPATH/build" ]; then
    echo "‚úÖ Directorio build/ existe"
else
    echo "‚ö†Ô∏è Directorio build/ no encontrado - verificar compilaci√≥n de assets"
fi

if [ -L "$PUBLICPATH/storage" ]; then
    echo "‚úÖ Enlace simb√≥lico storage configurado"
else
    echo "‚ö†Ô∏è Enlace simb√≥lico storage no configurado"
fi

echo ""
echo "üéâ POST-DEPLOY COMPLETADO"
echo "========================"
echo ""
echo "üìã TAREAS MANUALES RESTANTES:"
echo ""
echo "1. üóÑÔ∏è Configurar .env con datos reales:"
echo "   - DB_DATABASE=tu_bd_real"
echo "   - DB_USERNAME=tu_usuario_real"
echo "   - DB_PASSWORD=tu_password_real"
echo "   - APP_URL=https://tu-dominio.com"
echo ""
echo "2. üîë Si no se ejecutaron las migraciones:"
echo "   cd $APPPATH"
echo "   /usr/local/bin/ea-php83 artisan migrate --force"
echo ""
echo "3. üß™ Probar la aplicaci√≥n:"
echo "   - Verificar que carga la p√°gina principal"
echo "   - Probar login"
echo "   - Verificar dashboard de supervisi√≥n (rol 16)"
echo ""
echo "4. üìä Monitorear logs:"
echo "   tail -f $APPPATH/storage/logs/laravel.log"
echo ""

# Mostrar informaci√≥n del sistema
echo "‚ÑπÔ∏è INFORMACI√ìN DEL SISTEMA:"
echo "PHP Version: $(/usr/local/bin/ea-php83 -v | head -n 1)"
echo "Directorio de la app: $APPPATH"
echo "Directorio p√∫blico: $PUBLICPATH"
echo "Usuario actual: $(whoami)"
echo ""
echo "¬°Deploy completado! üöÄ"
